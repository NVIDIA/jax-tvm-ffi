# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
[project]
name = "jax-tvm-ffi"
version = "0.1.0a0"

license = { text = "Apache 2.0" }
classifiers = [
  "License :: OSI Approved :: Apache Software License",
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
]
keywords = ["machine learning", "inference"]
requires-python = ">=3.9"

dependencies = ["jax", "apache-tvm-ffi"]

[build-system]
requires = ["scikit-build-core>=0.10.0", "apache-tvm-ffi", "jax"]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
# the wheel is abi agnostic
wheel.py-api = "py3"
minimum-version = "build-system.requires"

# Build configuration
build-dir = "build"
build.verbose = true

# CMake configuration
cmake.version = "CMakeLists.txt"
cmake.build-type = "RelWithDebugInfo"

# Logging
logging.level = "INFO"

# Wheel configuration
wheel.packages = ["python/jax_tvm_ffi"]
wheel.install-dir = "jax_tvm_ffi"

[tool.ruff]
include = ["python/**/*.py", "tests/**/*.py"]
line-length = 100
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
select = [
  "UP",  # pyupgrade, https://docs.astral.sh/ruff/rules/#pyupgrade-up
  "PL",  # pylint, https://docs.astral.sh/ruff/rules/#pylint-pl
  "I",   # isort, https://docs.astral.sh/ruff/rules/#isort-i
  "RUF", # ruff, https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
  "NPY", # numpy, https://docs.astral.sh/ruff/rules/#numpy-specific-rules-npy
  "F",   # pyflakes, https://docs.astral.sh/ruff/rules/#pyflakes-f
  "ANN", # flake8-annotations, https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
  "PTH", # flake8-use-pathlib, https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
]
ignore = [
  "PLR2004", # pylint: magic-value-comparison
  "ANN401",  # flake8-annotations: any-type
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # pyflakes: unused-import
"tests/*" = [
  "E741", # pycodestyle: ambiguous-variable-name
  "ANN",  # flake8-annotations: no type hints required in tests
]

[tool.ruff.lint.pylint]
max-args = 10

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"
